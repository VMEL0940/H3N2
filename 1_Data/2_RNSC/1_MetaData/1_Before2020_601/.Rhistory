### DATA Manupulation for the Syn ##
All600_Train_Syn <- All600_Train[c(1:8, 17:24)]
Gat_Syn <- All600_Train_Syn %>%
gather("Gene", "Syn", 9:16)
Gat_Syn$vaccine_period <- factor(Gat_Syn$vaccine_code,
levels = c("Mos99",
"Fuj02",
"Cal04",
"Wis05",
"Bris07",
"Prth09",
"Vic11",
"Swtz13"),
labels = c("1.Mos99",
"2.Fuj02",
"3.Cal04",
"4.Wis05",
"5.Bris07",
"6.Prth09",
"7.Vic11",
"8.Swtz13"))
Gat_Syn$Gene_F <- factor(Gat_Syn$Gene,
levels = c("PB2_Syn",
"PB1_Syn",
"PA_Syn",
"HA_Syn",
"NP_Syn",
"NA_Syn",
"M_Syn",
"NS_Syn"),
labels = c("PB2",
"PB1",
"PA",
"HA",
"NP",
"NA",
"M",
"NS"))
Gat_Syn$Dominance <- factor(Gat_Syn$Dom,
levels = c(0,1),
labels = c("Extinct", "Dominant"))
Gat_Syn %>%
ggplot() +
geom_jitter(aes(x= Dominance, y= Syn), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Dominance, y = Syn, color = Dominance), size = 1.1, outlier.shape = NA, alpha = 0) +
xlab("Dominance") +
ylab("Synonymous genetic distance")+
facet_wrap( ~ Gene_F, nrow = 2, ncol = 4) +
scale_color_manual(values = VP2Col, guide="none") +
theme_bw() +
theme(strip.background = element_rect(fill="white"),
strip.text.x = element_text(size = 10, face = "bold", family = "sans"))
### DATA Manupulation for HA Mutations##
All600_Train_HA <- All600_Train[c(1:8, 25:27)]
Gat_HA <- All600_Train_HA %>%
gather("Position", "Mutation", 9:11)
Gat_HA$Position_F <- factor(Gat_HA$Position,
levels = c("HA_RBD",
"HA_15A",
"HA_Koel"),
labels = c("HA-RBD",
"HA-RBD/15A",
"HA-Koel"))
Gat_HA$Dominance <- factor(Gat_HA$Dom,
levels = c(0,1),
labels = c("Extinct", "Dominant"))
Gat_HA %>%
ggplot() +
geom_jitter(aes(x= Dominance, y= Mutation), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Dominance, y = Mutation, color = Dominance), size = 1.1, outlier.shape = NA, alpha = 0) +
xlab("Dominance") +
ylab("The number of amino acid mutations")+
facet_wrap( ~ Position_F, nrow = 1, ncol = 3) +
scale_color_manual(values = VP2Col, guide="none") +
theme_bw() +
theme(strip.background = element_rect(fill="white"),
strip.text.x = element_text(size = 10, face = "bold", family = "sans"))
## Set working directory ##
setwd("/Users/sangyi/Desktop/H3N2/1_Data/10_Final_MetaData_Submission/")
## Set working directory ##
setwd("/Users/sangyi/Desktop/H3N2/1_Data/2_RNSC/1_MetaData")
AllG_NS <- read.csv("Veri_725_2024/FullReg_724.csv", header = T, na.strings = "")
## Set working directory ##
setwd("/Users/sangyi/Desktop/H3N2/1_Data/2_RNSC/1_MetaData/3_2nd_Verification_724/")
AllG_NS <- read.csv("FullReg_724.csv", header = T, na.strings = "")
### 1. Filter -- Only after 2020 ##
AllG_NS_Af2020 <- AllG_NS %>%
filter(vaccine_code == "Dar21" | vaccine_code == "Cam20" | vaccine_code == "HK19" | vaccine_code == "Kan17")
Smedian <- AllG_NS_Af2020[,c(24, 2:7, 9,11,13,15,17,19,21,23)]
colnames(Smedian)[1]  <- c("ID")
colnames(Smedian)[8]  <- c("PB2")
colnames(Smedian)[9]  <- c("PB1")
colnames(Smedian)[10]  <- c("PA")
colnames(Smedian)[11]  <- c("HA")
colnames(Smedian)[12]  <- c("NP")
colnames(Smedian)[13]  <- c("NA")
colnames(Smedian)[14]  <- c("M")
colnames(Smedian)[15]  <- c("NS")
Des_Data_Af2020 <- Smedian %>%
gather("Gene", "SMed", 8:15)
NMedian <- AllG_NS_Af2020[,c(24, 2:7, 8,10,12,14,16,18,20,22)]
colnames(NMedian)[1]  <- c("ID")
colnames(NMedian)[8]  <- c("PB2")
colnames(NMedian)[9]  <- c("PB1")
colnames(NMedian)[10]  <- c("PA")
colnames(NMedian)[11]  <- c("HA")
colnames(NMedian)[12]  <- c("NP")
colnames(NMedian)[13]  <- c("NA")
colnames(NMedian)[14]  <- c("M")
colnames(NMedian)[15]  <- c("NS")
Des_Data_Af2020_N <- NMedian %>%
gather("Gene", "NMed", 8:15)
Des_Data_Af2020_All <- cbind(Des_Data_Af2020, Des_Data_Af2020_N[c(9)])
Des_Data_Af2020_All$Gene <- factor(Des_Data_Af2020_All$Gene, levels = c("PB2", "PB1", "PA", "HA",
"NP", "NA", "M", "NS"))
GeneCol <- c("#C780E8", "#9D94FF","#59ADF6","#08CAD1","#42D6A4","#F8F38D","#FFB480","#FF6961")
Des_Data_Af2020_All$vaccine_code_F <- factor(Des_Data_Af2020_All$vaccine_code,
levels = c("Kan17",
"HK19",
"Cam20",
"Dar21"),
labels = c("10.Kan17",
"11.HK19",
"12.Cam20",
"13.Dar21"))
## Descriptive Summary of N & S value by Gene and Vaccine period ##
Desc_all <- AllG_NS %>%
group_by(Gene, Vaccine_code) %>%
summarise(Nmean = mean(Nmedian), Nse = 1.96*sd(Nmedian)/sqrt(n()),
Smean = mean(Smedian), Sse = 1.96*sd(Smedian)/sqrt(n()),
n = n())
Desc_all_N_All <- AllG_NS %>%
group_by(Gene) %>%
summarise(DisMean = mean(Nmedian), DisMedian = median(Nmedian),
lowerCrIn = quantile(Nmedian, na.rm = T, probs = 0.05),
UpperCrIn = quantile(Nmedian, na.rm = T, probs = 0.95),
lower = mean(Nmedian) - 1.96*sd(Nmedian)/sqrt(n()),
upper = mean(Nmedian) + 1.96*sd(Nmedian)/sqrt(n()),
n = n())
Des_Data_Af2020_All$vaccine_code_F <- factor(Des_Data_Af2020_All$vaccine_code,
levels = c("Kan17",
"HK19",
"Cam20",
"Dar21"),
labels = c("10.Kan17",
"11.HK19",
"12.Cam20",
"13.Dar21"))
## Descriptive Summary of N & S value by Gene and Vaccine period ##
Desc_all <- AllG_NS %>%
group_by(Gene, Vaccine_code) %>%
summarise(Nmean = mean(Nmedian), Nse = 1.96*sd(Nmedian)/sqrt(n()),
Smean = mean(Smedian), Sse = 1.96*sd(Smedian)/sqrt(n()),
n = n())
AllG_NS
Des_Data_Af2020_All
## Box plot for N value by Gene ##
Des_Data_Af2020_All %>%
ggplot() +
geom_jitter(aes(x= Gene, y= NMed), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = NMed), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 65) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box plot for S value by Gene ##
Des_Data_Af2020_All %>%
ggplot() +
geom_jitter(aes(x= Gene, y= SMed), width = 0.25, size = 0.6, color = "gray40") +
geom_boxplot(aes(x= Gene, y = SMed), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Synonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 65) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
### Seasonal H3N2 Prediction - N and S Genetic distance descriptive ###
## Package ##
library(tidyverse)
## Data import ##
AllG_NS <- read.csv("H3N2_600_GenD.csv", header = T, na.strings = "")
## Set working directory ##
#setwd("C:/Users/KU_Microb_Virus/gDrive/KU_RschProf/01_GenDisFlu/")
setwd("/Users/sangyi/Desktop/H3N2/1_Data/2_RNSC/1_MetaData/1_Before2020_601//")
## Data import ##
AllG_NS <- read.csv("H3N2_600_GenD.csv", header = T, na.strings = "")
AllG_NS$Gene <- factor(AllG_NS$Gene, levels = c("PB2", "PB1", "PA", "HA",
"NP", "NA", "M", "NS"))
AllG_NS
AllG_NS$Vaccine_code <- factor(AllG_NS$VacStr,
levels = c("EPI103320_A_Moscow_10_1999_NA_NA_NA_NA",
"EPI358781_A_Fujian_411_2002_NA_NA_NA_NA",
"EPI367109_A_California_7_2004_NA_NA_NA_NA",
"EPI502253_A_Wisconsin_67_2005_NA_NA_NA_NA",
"EPI577980_A_Brisbane_10_2007_NA_NA_NA_NA",
"EPI577969_A_Perth_16_2009_NA_NA_NA_NA",
"EPI417234_A_Victoria_361_2011_NA_NA_NA_NA",
"EPI614441_A_Switzerland_9715293_2013_NA_NA_NA_NA",
"EPI686117_A_Hong_Kong_15611_2015_NA_NA_NA"),
labels = c("1.Mos99",
"2.Fuj02",
"3.Cal04",
"4.Wis05",
"5.Bris07",
"6.Prth09",
"7.Vic11",
"8.Swtz13",
"9.HK15"))
AllG_NS_long <- AllG_NS %>%
pivot_longer(
cols = -c(ID, VacStr),
names_to = c("Gene", ".value"),
names_pattern = "(.*)_(Nonsyn|Syn)"
) %>%
rename(Nmedian = Nonsyn, Smedian = Syn)
AllG_NS_long
AllG_NS_long$Gene <- factor(AllG_NS_long$Gene, levels = c("PB2", "PB1", "PA", "HA",
"NP", "NA", "M", "NS"))
GeneCol <- c("#C780E8", "#9D94FF","#59ADF6","#08CAD1","#42D6A4","#F8F38D","#FFB480","#FF6961")
AllG_NS_long$Vaccine_code <- factor(AllG_NS_long$VacStr,
levels = c("EPI103320_A_Moscow_10_1999_NA_NA_NA_NA",
"EPI358781_A_Fujian_411_2002_NA_NA_NA_NA",
"EPI367109_A_California_7_2004_NA_NA_NA_NA",
"EPI502253_A_Wisconsin_67_2005_NA_NA_NA_NA",
"EPI577980_A_Brisbane_10_2007_NA_NA_NA_NA",
"EPI577969_A_Perth_16_2009_NA_NA_NA_NA",
"EPI417234_A_Victoria_361_2011_NA_NA_NA_NA",
"EPI614441_A_Switzerland_9715293_2013_NA_NA_NA_NA",
"EPI686117_A_Hong_Kong_15611_2015_NA_NA_NA"),
labels = c("1.Mos99",
"2.Fuj02",
"3.Cal04",
"4.Wis05",
"5.Bris07",
"6.Prth09",
"7.Vic11",
"8.Swtz13",
"9.HK15"))
AllG_NS <- AllG_NS %>%
pivot_longer(
cols = -c(ID, VacStr),
names_to = c("Gene", ".value"),
names_pattern = "(.*)_(Nonsyn|Syn)"
) %>%
rename(Nmedian = Nonsyn, Smedian = Syn)
df_long
AllG_NS$Gene <- factor(AllG_NS$Gene, levels = c("PB2", "PB1", "PA", "HA",
"NP", "NA", "M", "NS"))
GeneCol <- c("#C780E8", "#9D94FF","#59ADF6","#08CAD1","#42D6A4","#F8F38D","#FFB480","#FF6961")
AllG_NS$Vaccine_code <- factor(AllG_NS$VacStr,
levels = c("EPI103320_A_Moscow_10_1999_NA_NA_NA_NA",
"EPI358781_A_Fujian_411_2002_NA_NA_NA_NA",
"EPI367109_A_California_7_2004_NA_NA_NA_NA",
"EPI502253_A_Wisconsin_67_2005_NA_NA_NA_NA",
"EPI577980_A_Brisbane_10_2007_NA_NA_NA_NA",
"EPI577969_A_Perth_16_2009_NA_NA_NA_NA",
"EPI417234_A_Victoria_361_2011_NA_NA_NA_NA",
"EPI614441_A_Switzerland_9715293_2013_NA_NA_NA_NA",
"EPI686117_A_Hong_Kong_15611_2015_NA_NA_NA"),
labels = c("1.Mos99",
"2.Fuj02",
"3.Cal04",
"4.Wis05",
"5.Bris07",
"6.Prth09",
"7.Vic11",
"8.Swtz13",
"9.HK15"))
## Descriptive Summary of N & S value by Gene and Vaccine period ##
Desc_all <- AllG_NS %>%
group_by(Gene, Vaccine_code) %>%
summarise(Nmean = mean(Nmedian), Nse = 1.96*sd(Nmedian)/sqrt(n()),
Smean = mean(Smedian), Sse = 1.96*sd(Smedian)/sqrt(n()),
n = n())
Desc_all_N_All <- AllG_NS %>%
group_by(Gene) %>%
summarise(DisMean = mean(Nmedian), DisMedian = median(Nmedian),
lowerCrIn = quantile(Nmedian, na.rm = T, probs = 0.05),
UpperCrIn = quantile(Nmedian, na.rm = T, probs = 0.95),
lower = mean(Nmedian) - 1.96*sd(Nmedian)/sqrt(n()),
upper = mean(Nmedian) + 1.96*sd(Nmedian)/sqrt(n()),
n = n())
Desc_all_S_All <- AllG_NS %>%
group_by(Gene) %>%
summarise(DisMean = mean(Smedian), DisMedian = median(Smedian),
lowerCrIn = quantile(Smedian, na.rm = T, probs = 0.05),
UpperCrIn = quantile(Smedian, na.rm = T, probs = 0.95),
lower = mean(Smedian) - 1.96*sd(Smedian)/sqrt(n()),
upper = mean(Smedian) + 1.96*sd(Smedian)/sqrt(n()),
n = n())
Desc_all_N <- AllG_NS %>%
group_by(Gene, Vaccine_code) %>%
summarise(DisMean = mean(Nmedian), DisMedian = median(Nmedian),
lowerCrIn = quantile(Nmedian, na.rm = T, probs = 0.05),
UpperCrIn = quantile(Nmedian, na.rm = T, probs = 0.95),
lower = mean(Nmedian) - 1.96*sd(Nmedian)/sqrt(n()),
upper = mean(Nmedian) + 1.96*sd(Nmedian)/sqrt(n()),
n = n())
Desc_all_S <- AllG_NS %>%
group_by(Gene, Vaccine_code) %>%
summarise(DisMean = mean(Smedian), DisMedian = median(Smedian),
lowerCrIn = quantile(Smedian, na.rm = T, probs = 0.05),
UpperCrIn = quantile(Smedian, na.rm = T, probs = 0.95),
lower = mean(Smedian) - 1.96*sd(Smedian)/sqrt(n()),
upper = mean(Smedian) + 1.96*sd(Smedian)/sqrt(n()),
n = n())
## Error Bar plot for N value by Gene and Vaccine period ##
Desc_all %>%
ggplot() +
geom_errorbar(aes(x= Gene, ymin=Nmean-Nse,ymax=Nmean+Nse), color = "gray40",
width=0.3, size = 0.7) +
geom_point(aes(x= Gene, y=Nmean, fill = Gene), size = 2, shape = 21, color = "gray40") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap(~Vaccine_code, nrow = 3, ncol = 5) +
ylab("Renaissance count of Non-synonymous mutation")+
ylim(0, 40) +
theme_bw() +
theme(axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7),
strip.text = element_text(size=11))
## Error Bar plot for S value by Gene and Vaccine period ##
Desc_all %>%
ggplot() +
geom_errorbar(aes(x= Gene, ymin=Smean-Sse, ymax=Smean+Sse), color = "gray40",
width=0.3, size = 0.7) +
geom_point(aes(x= Gene, y=Smean, fill = Gene), size = 2, shape = 21, color = "gray40") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap(~vaccineStrain, nrow = 2, ncol = 5) +
ylab("Renaissance count of Synonymous mutation")+
ylim(0, 40) +
theme_bw() +
theme(axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7),
strip.text = element_text(size=11))
## Error Bar plot for S value by Gene and Vaccine period ##
Desc_all %>%
ggplot() +
geom_errorbar(aes(x= Gene, ymin=Smean-Sse, ymax=Smean+Sse), color = "gray40",
width=0.3, size = 0.7) +
geom_point(aes(x= Gene, y=Smean, fill = Gene), size = 2, shape = 21, color = "gray40") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap(~Vaccine_code, nrow = 2, ncol = 5) +
ylab("Renaissance count of Synonymous mutation")+
ylim(0, 40) +
theme_bw() +
theme(axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7),
strip.text = element_text(size=11))
## Error Bar plot for N value by Gene ##
AllG_NS %>%
group_by(Gene) %>%
summarise(Nmean = mean(Nmedian), Nse = 1.96*sd(Nmedian)/sqrt(n()),
Smean = mean(Smedian), Sse = 1.96*sd(Smedian)/sqrt(n()),
n = n()) %>%
ggplot() +
geom_errorbar(aes(x= Gene, ymin=Nmean-Nse,ymax=Nmean+Nse), color = "gray40",
width=0.2, size = 0.7) +
geom_point(aes(x= Gene, y=Nmean, fill = Gene), size = 3, shape = 21, color = "gray40") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Renaissance count of Non-synonymous mutation")+
ylim(0, 15) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Error Bar plot for S value by Gene ##
AllG_NS %>%
group_by(Gene) %>%
summarise(Nmean = mean(Nmedian), Nse = 1.96*sd(Nmedian)/sqrt(n()),
Smean = mean(Smedian), Sse = 1.96*sd(Smedian)/sqrt(n()),
n = n()) %>%
ggplot() +
geom_errorbar(aes(x= Gene, ymin=Smean-Sse, ymax=Smean+Sse), color = "gray40",
width=0.2, size = 0.7) +
geom_point(aes(x= Gene, y=Smean, fill = Gene), size = 3, shape = 21, color = "gray40") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Renaissance count of Synonymous mutation")+
ylim(0, 15) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box plot for N value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 60) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box + Jitter plot for N value by Gene and Vaccine period ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.75, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian, color = Gene), size = 0.8, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap( ~ Vaccine_code, nrow = 3, ncol = 5) +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
theme_bw() +
ylim(-1, 65) +
theme(strip.background = element_rect(fill="white"),
strip.text.x = element_text(size = 10, face = "bold", family = "sans"),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7))
## Box plot for S value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Smedian), width = 0.25, size = 0.6, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Smedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Synonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 65) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box plot for N value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 50) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box plot for S value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Smedian), width = 0.25, size = 0.6, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Smedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Synonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 50) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box + Jitter plot for S value by Gene and Vaccine period ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Smedian), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Smedian, color = Gene), size = 0.8, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap( ~ Vaccine_code, nrow = 3, ncol = 5) +
ylab("Synonymous genetic distance")+
xlab("Gene segment")+
theme_bw() +
ylim(-1, 65) +
theme(strip.background = element_rect(fill="white"),
strip.text.x = element_text(size = 10, face = "bold", family = "sans"),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7))
## Box plot for N value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 50) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
## Box + Jitter plot for N value by Gene and Vaccine period ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.75, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian, color = Gene), size = 0.8, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
facet_wrap( ~ Vaccine_code, nrow = 3, ncol = 5) +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
theme_bw() +
ylim(-1, 65) +
theme(strip.background = element_rect(fill="white"),
strip.text.x = element_text(size = 10, face = "bold", family = "sans"),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 7))
## Box plot for N value by Gene ##
AllG_NS %>%
ggplot() +
geom_jitter(aes(x= Gene, y= Nmedian), width = 0.25, size = 0.50, color = "gray40") +
geom_boxplot(aes(x= Gene, y = Nmedian), color = GeneCol, size = 1.3, outlier.shape = NA, alpha = 0) +
scale_color_manual(values = GeneCol, guide="none") +
scale_fill_manual(values = GeneCol, guide="none") +
ylab("Nonsynonymous genetic distance")+
xlab("Gene segment")+
ylim(-1, 50) +
theme_bw() +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12))
